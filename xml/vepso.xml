<?xml version="1.0"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <algorithm id="pso" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <velocityUpdateStrategy class="pso.velocityupdatestrategies.MOVelocityUpdateStrategy">
                        <localGuideSelectionStrategy class="pso.moo.guideselectionstrategies.PBestGuideSelectionStrategy"/>
                        <localGuideUpdateStrategy class="pso.moo.guideupdatestrategies.StandardGuideUpdateStrategy"/>
                        <globalGuideSelectionStrategy class="pso.moo.guideselectionstrategies.VEPSOGuideSelectionStrategy">
                            <knowledgeTransferStrategy class="algorithm.population.knowledgetransferstrategies.SelectiveKnowledgeTransferStrategy">
                                <populationSelection class="util.selection.recipes.RingBasedPopulationSelection"/>
                                <entitySelection class="util.selection.recipes.TournamentSelection"/>
                            </knowledgeTransferStrategy>
                        </globalGuideSelectionStrategy>
                        <globalGuideUpdateStrategy class="pso.moo.guideupdatestrategies.StandardGuideUpdateStrategy"/>
                    </velocityUpdateStrategy>
                </entityType>
            </initialisationStrategy>
            <iterationStrategy class="moo.iterationstrategies.ArchivingIterationStrategy">
                <archive class="moo.archive.constrained.SetBasedConstrainedArchive" capacity="1000"/>
                <iterationStrategy class="pso.iterationstrategies.SynchronousIterationStrategy"/>
            </iterationStrategy>
        </algorithm>
        <algorithm id="vepso" class="algorithm.population.MultiPopulationCriterionBasedAlgorithm">
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="100"/>
            <objectiveAssignmentStrategy class="moo.criterion.objectiveassignmentstrategies.SequentialObjectiveAssignmentStrategy"/>
            <addPopulationBasedAlgorithm idref="pso"/>
            <addPopulationBasedAlgorithm idref="pso"/>
        </algorithm>
    </algorithms>
    <problems>
        <problem id="f1_x" class="problem.FunctionMinimisationProblem">
            <function class="functions.continuous.ExpressionFunction" expression="(1 / 4) * (x1^2 + x2^2 + x3^2 + x4^2)" domain="R(0.0, 2.0)^4"/>
        </problem>
        <problem id="f2_x" class="problem.FunctionMinimisationProblem">
            <function class="functions.continuous.ExpressionFunction" expression="(1 / 4) * ((x1 - 2)^2 + (x2 - 2)^2 + (x3 - 2)^2 + (x4 - 2)^2)" domain="R(0.0, 2.0)^4"/>
        </problem>
        <problem id="moo_problem" class="problem.MOOptimisationProblem">
            <add idref="f1_x"/>
            <add idref="f2_x"/>
        </problem>
    </problems>
    <measurements id="fitness" class="simulator.MeasurementSuite" resolution="10" samples="1">
        <addMeasurement class="measurement.multiple.ParetoOptimalFront"/>
    </measurements>
    <simulations>
        <simulation>
            <algorithm idref="vepso"/>
            <problem idref="moo_problem"/>
            <measurements idref="fitness" file="data/vepso.txt"/>
        </simulation>
    </simulations>
</simulator>
